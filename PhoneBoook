{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPpcn5VdGZg0QwrMD8xt1zr",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Kazureee/Python-Lessons/blob/main/PhoneBoook\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Create a python"
      ],
      "metadata": {
        "id": "hzar8rTroc5D"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U__oLyK4mYcV",
        "outputId": "22dbc902-4b31-4c03-8e61-c632193931d3"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv_file_path = '/content/drive/MyDrive/Colab Notebooks/data/PhoneBookDataset.csv'\n"
      ],
      "metadata": {
        "id": "8S6wTlK5nzi8"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def add_record():\n",
        "    print(\"\\n--- Add New Record ---\")\n",
        "    name = input(\"Enter Name: \")\n",
        "    phone = input(\"Enter Phone Number: \")\n",
        "    email = input(\"Enter Email Address: \")\n",
        "    address = input(\"Enter Address: \")\n",
        "\n",
        "    with open(csv_file_path, mode='a', newline='') as file:\n",
        "        writer = csv.writer(file)\n",
        "        writer.writerow([name, phone, email, address])\n",
        "    print(\"Record added successfully!\")\n",
        "\n",
        "# Function to search for a record\n",
        "def search_record():\n",
        "    print(\"\\n--- Search Record ---\")\n",
        "    search_key = input(\"Enter Name or Phone to search: \")\n",
        "    with open(csv_file_path, mode='r') as file:\n",
        "        reader = csv.reader(file)\n",
        "        next(reader)\n",
        "        found = False\n",
        "        for row in reader:\n",
        "            if search_key in row:\n",
        "                print(\"Record Found:\", row)\n",
        "                found = True\n",
        "                break\n",
        "        if not found:\n",
        "            print(\"No record found.\")\n",
        "\n",
        "# Function to export filtered records\n",
        "def export_filtered_records():\n",
        "    print(\"\\n--- Export Filtered Records ---\")\n",
        "    search_key = input(\"Enter Name or Phone to filter: \")\n",
        "    export_path = input(\"Enter the path to save the filtered file: \")\n",
        "\n",
        "    with open(csv_file_path, mode='r') as file:\n",
        "        reader = csv.reader(file)\n",
        "        header = next(reader)  # Store header\n",
        "        filtered_records = [header]  # Start with header\n",
        "\n",
        "        for row in reader:\n",
        "            if search_key in row:\n",
        "                filtered_records.append(row)\n",
        "\n",
        "    if len(filtered_records) > 1:\n",
        "        with open(export_path, mode='w', newline='') as export_file:\n",
        "            writer = csv.writer(export_file)\n",
        "            writer.writerows(filtered_records)\n",
        "        print(f\"Filtered records exported to {export_path}\")\n",
        "    else:\n",
        "        print(\"No records match the filter.\")\n",
        "\n",
        "# Main program loop\n",
        "def main():\n",
        "    while True:\n",
        "        print(\"\\n--- PhoneBook Menu ---\")\n",
        "        print(\"1. Add New Record\")\n",
        "        print(\"2. Search Record\")\n",
        "        print(\"3. Export Filtered Records\")\n",
        "        print(\"4. Exit\")\n",
        "\n",
        "        choice = input(\"Enter your choice (1-4): \")\n",
        "        if choice == '1':\n",
        "            add_record()\n",
        "        elif choice == '2':\n",
        "            search_record()\n",
        "        elif choice == '3':\n",
        "            export_filtered_records()\n",
        "        elif choice == '4':\n",
        "            print(\"Exiting program. Goodbye!\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Invalid choice. Please try again.\")\n",
        "\n",
        "# Run the main program\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "DvBHkZadpZRM"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}